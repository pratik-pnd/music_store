/*	Question Set 1 - Easy */

/* Q1: Who is the senior most employee based on job title? */

SELECT
	employee_id,first_name,last_name,birthdate
FROM
	employee
ORDER BY
	birthdate
LIMIT
	1
	
/* Q2: Which countries have the most Invoices? */

SELECT
	billing_country,count(*) AS country_invoice_amount
FROM
	invoice
GROUP BY
	billing_country
ORDER BY
	country_invoice_amount DESC

/* Q3: What are top 3 values of total invoice? */
SELECT
	*
FROM
	invoice
ORDER BY
	total DESC
LIMIT
	3
	
/* Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */

SELECT * FROM invoice




SELECT
	billing_city,SUM(total) AS total_earned_in_the_city 
FROM
	invoice
GROUP BY
	billing_city
ORDER BY
	total_earned_in_the_city DESC
LIMIT
	5
	
/* Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.*/
SELECT
	c.customer_id,c.first_name,c.last_name,SUM(inv.total) AS tot_spent
FROM
	customer AS c
JOIN
	invoice AS inv
ON
	c.customer_id = inv.customer_id
GROUP BY
	c.customer_id
ORDER BY
	tot_spent DESC
LIMIT
	1
/* Question Set 2 - Moderate */

/* Q1: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A. */

SELECT
	DISTINCT cust.first_name,cust.last_name,cust.email,genre.name
FROM
	customer AS cust
JOIN invoice ON cust.customer_id = invoice.customer_id
JOIN invoice_line ON invoice.invoice_id = invoice_line.invoice_id
JOIN track ON invoice_line.track_id = track.track_id
JOIN genre ON track.genre_id = genre.genre_id
WHERE
	genre.name LIKE 'Rock'
ORDER BY
	cust.email

/* Q2: Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands. */
SELECT
	artist.name,COUNT(*) AS tot_writ
FROM
	artist
JOIN album ON artist.artist_id = album.artist_id
JOIN track ON album.album_id = track.album_id
JOIN genre ON track.genre_id = genre.genre_id
WHERE genre.name LIKE 'Rock'
GROUP BY
	artist.name
ORDER BY
	tot_writ DESC
LIMIT
	5
	
/* Q3: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. */

SELECT track_id,name,milliseconds
FROM track
WHERE milliseconds > (SELECT AVG(milliseconds) FROM track)
ORDER BY milliseconds DESC
LIMIT 10